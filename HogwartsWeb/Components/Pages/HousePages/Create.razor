@page "/houses/create"
@using Microsoft.EntityFrameworkCore
@using Hogwarts
@inject IDbContextFactory<HogwartsWeb.Data.HogwartsWebContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>House</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="House" OnValidSubmit="AddHouse" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="housename" class="form-label">HouseName:</label> 
                <InputText id="housename" @bind-Value="House.HouseName" class="form-control" /> 
                <ValidationMessage For="() => House.HouseName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="founder" class="form-label">Founder:</label> 
                <InputText id="founder" @bind-Value="House.Founder" class="form-control" /> 
                <ValidationMessage For="() => House.Founder" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="symbol" class="form-label">Symbol:</label> 
                <InputText id="symbol" @bind-Value="House.Symbol" class="form-control" /> 
                <ValidationMessage For="() => House.Symbol" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="colors" class="form-label">Colors:</label> 
                <InputText id="colors" @bind-Value="House.Colors" class="form-control" /> 
                <ValidationMessage For="() => House.Colors" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/houses">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private House House { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddHouse()
    {
        using var context = DbFactory.CreateDbContext();
        context.House.Add(House);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/houses");
    }
}
