@page "/professors/delete"
@using Microsoft.EntityFrameworkCore
@using dnzHogwards
@inject IDbContextFactory<HogwartsWeb.Data.HogwartsWebContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete Professor</PageTitle>

<div class="page-container">
    <h1 class="page-title">Delete Professor</h1>

    <p>Are you sure you want to delete this professor?</p>
    <hr />

    @if (professor is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-3">First Name:</dt>
            <dd class="col-sm-9">@professor.FirstName</dd>

            <dt class="col-sm-3">Last Name:</dt>
            <dd class="col-sm-9">@professor.LastName</dd>

            <dt class="col-sm-3">Specialty:</dt>
            <dd class="col-sm-9">@professor.Specialty</dd>

            <dt class="col-sm-3">Level:</dt>
            <dd class="col-sm-9">@professor.Level</dd>

            <dt class="col-sm-3">House:</dt>
            <dd class="col-sm-9">@professor.House?.HouseName</dd>
        </dl>

        <EditForm method="post" Model="professor" OnValidSubmit="DeleteProfessor" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger me-2" disabled="@(professor is null)">Delete</button>
            <a href="/professors" class="btn btn-secondary">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Professor? professor;

    [SupplyParameterFromQuery]
    private int ProfessorId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        professor = await context.Professor
                                 .Include(m => m.House)
                                 .FirstOrDefaultAsync(m => m.ProfessorId == ProfessorId);

        if (professor is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteProfessor()
    {
        using var context = DbFactory.CreateDbContext();
        context.Professor.Remove(professor!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/professors");
    }
}
