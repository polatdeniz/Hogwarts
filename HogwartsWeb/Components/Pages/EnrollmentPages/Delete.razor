@page "/enrollments/delete"
@using Microsoft.EntityFrameworkCore
@using dnzHogwards
@inject IDbContextFactory<HogwartsWeb.Data.HogwartsWebContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete Enrollment</PageTitle>

<div class="page-container">
    <h1 class="page-title">Delete Enrollment</h1>

    <p>Are you sure you want to delete this enrollment?</p>
    <hr />

    @if (enrollment is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-3">Student ID:</dt>
            <dd class="col-sm-9">@enrollment.StudentId</dd>

            <dt class="col-sm-3">Course ID:</dt>
            <dd class="col-sm-9">@enrollment.CourseId</dd>

            <dt class="col-sm-3">Professor ID:</dt>
            <dd class="col-sm-9">@enrollment.ProfessorId</dd>

            <dt class="col-sm-3">Enrollment Date:</dt>
            <dd class="col-sm-9">@enrollment.EnrollmentDate.ToShortDateString()</dd>
        </dl>

        <EditForm method="post" Model="enrollment" OnValidSubmit="DeleteEnrollment" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger me-2" disabled="@(enrollment is null)">Delete</button>
            <a href="/enrollments" class="btn btn-secondary">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Enrollment? enrollment;

    [SupplyParameterFromQuery]
    private int EnrollmentId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        enrollment = await context.Enrollment.FirstOrDefaultAsync(m => m.EnrollmentId == EnrollmentId);

        if (enrollment is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteEnrollment()
    {
        using var context = DbFactory.CreateDbContext();
        context.Enrollment.Remove(enrollment!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/enrollments");
    }
}
