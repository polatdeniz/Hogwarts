@page "/enrollments/create"
@using Microsoft.EntityFrameworkCore
@using dnzHogwards
@inject IDbContextFactory<HogwartsWeb.Data.HogwartsWebContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create Enrollment</PageTitle>

<div class="page-container">
    <h1 class="page-title">Create Enrollment</h1>

    <EditForm Model="Enrollment" OnValidSubmit="AddEnrollment" FormName="create" Enhance>
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" />

        <!---- STUDENT ---->
        <div class="mb-3">
            <label class="form-label" for="student">Student:</label>
            <InputSelect id="student"
                         @bind-Value="Enrollment.StudentId"
                         class="form-control">
                <option value="">-- Select a Student --</option>
                @foreach (var s in Students)
                {
                    <option value="@s.StudentId">@($"{s.FirstName} {s.LastName}")</option>
                }
            </InputSelect>
            <ValidationMessage For="() => Enrollment.StudentId" class="text-danger" />
        </div>

        <!---- COURSE ---->
        <div class="mb-3">
            <label class="form-label" for="course">Course:</label>
            <InputSelect id="course"
                         @bind-Value="Enrollment.CourseId"
                         class="form-control">
                <option value="">-- Select a Course --</option>
                @foreach (var c in Courses)
                {
                    <option value="@c.CourseId">@c.CourseName</option>
                }
            </InputSelect>
            <ValidationMessage For="() => Enrollment.CourseId" class="text-danger" />
        </div>

        <!---- PROFESSOR ---->
        <div class="mb-3">
            <label class="form-label" for="professor">Professor:</label>
            <InputSelect id="professor"
                         @bind-Value="Enrollment.ProfessorId"
                         class="form-control">
                <option value="">-- Select a Professor --</option>
                @foreach (var p in Professors)
                {
                    <option value="@p.ProfessorId">@($"{p.FirstName} {p.LastName}")</option>
                }
            </InputSelect>
            <ValidationMessage For="() => Enrollment.ProfessorId" class="text-danger" />
        </div>

        <!---- DATE ---->
        <div class="mb-3">
            <label class="form-label" for="date">Enrollment Date:</label>
            <InputDate id="date" @bind-Value="Enrollment.EnrollmentDate" class="form-control" />
            <ValidationMessage For="() => Enrollment.EnrollmentDate" class="text-danger" />
        </div>

        <button type="submit" class="btn-create">Create</button>
        <a href="/enrollments" class="btn btn-secondary ms-2">Back to List</a>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    private Enrollment Enrollment { get; set; } = new();

    /* Dropdown kaynak listeleri */
    private List<Student> Students { get; set; } = new();
    private List<Course> Courses { get; set; } = new();
    private List<Professor> Professors { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        using var ctx = DbFactory.CreateDbContext();

        Students = await ctx.Student
                              .OrderBy(s => s.FirstName)
                              .ThenBy(s => s.LastName)
                              .ToListAsync();

        Courses = await ctx.Course
                              .OrderBy(c => c.CourseName)
                              .ToListAsync();

        Professors = await ctx.Professor
                              .OrderBy(p => p.FirstName)
                              .ThenBy(p => p.LastName)
                              .ToListAsync();
    }

    private async Task AddEnrollment()
    {
        using var ctx = DbFactory.CreateDbContext();

        ctx.Enrollment.Add(Enrollment);
        await ctx.SaveChangesAsync();

        NavigationManager.NavigateTo("/enrollments");
    }
}
