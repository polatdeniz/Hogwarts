@page "/enrollments/create"
@using Microsoft.EntityFrameworkCore
@using Hogwarts
@inject IDbContextFactory<HogwartsWeb.Data.HogwartsWebContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Enrollment</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Enrollment" OnValidSubmit="AddEnrollment" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="studentid" class="form-label">StudentId:</label> 
                <InputNumber id="studentid" @bind-Value="Enrollment.StudentId" class="form-control" /> 
                <ValidationMessage For="() => Enrollment.StudentId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="courseid" class="form-label">CourseId:</label> 
                <InputNumber id="courseid" @bind-Value="Enrollment.CourseId" class="form-control" /> 
                <ValidationMessage For="() => Enrollment.CourseId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="professorid" class="form-label">ProfessorId:</label> 
                <InputNumber id="professorid" @bind-Value="Enrollment.ProfessorId" class="form-control" /> 
                <ValidationMessage For="() => Enrollment.ProfessorId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="enrollmentdate" class="form-label">EnrollmentDate:</label> 
                <InputDate id="enrollmentdate" @bind-Value="Enrollment.EnrollmentDate" class="form-control" /> 
                <ValidationMessage For="() => Enrollment.EnrollmentDate" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/enrollments">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Enrollment Enrollment { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddEnrollment()
    {
        using var context = DbFactory.CreateDbContext();
        context.Enrollment.Add(Enrollment);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/enrollments");
    }
}
