@page "/students/details"
@using Microsoft.EntityFrameworkCore
@using Hogwarts
@rendermode InteractiveServer
@inject IDbContextFactory<HogwartsWeb.Data.HogwartsWebContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Student Details</h1>

@if (student is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <dl class="row">
                <dt class="col-sm-2">First Name</dt>
                <dd class="col-sm-10">@student.FirstName</dd>
                <dt class="col-sm-2">Last Name</dt>
                <dd class="col-sm-10">@student.LastName</dd>
                <dt class="col-sm-2">Level</dt>
                <dd class="col-sm-10">@student.Level</dd>
                <dt class="col-sm-2">House</dt>
                <dd class="col-sm-10">@student.House.HouseName</dd>
                <dt class="col-sm-2">Wand ID</dt>
                <dd class="col-sm-10">@student.WandId</dd>
            </dl>
        </div>

        <div class="col-md-6">
            <h2>Wand Details</h2>
            <dl class="row">
                <dt class="col-sm-4">Core</dt>
                <dd class="col-sm-8">@student.Wand.Core</dd>
                <dt class="col-sm-4">Material</dt>
                <dd class="col-sm-8">@student.Wand.Material</dd>
                <dt class="col-sm-4">Creation Date</dt>
                <dd class="col-sm-8">@student.Wand.CreationDate.ToString("yyyy-MM-dd")</dd>
                <dt class="col-sm-4">Last Maintenance</dt>
                <dd class="col-sm-8">@student.Wand.LastMaintenanceDate</dd>
            </dl>

            @if (student.Wand.LastMaintenanceDate < DateTime.Now.AddYears(-1))
            {
                <button type="button"
                        class="btn btn-warning mb-2"
                        @onclick="PerformMaintenance">
                    Maintenance
                </button>
            }
            <p class="text-info">@statusMessage</p>
        </div>
    </div>

    <div class="mt-3">
        <a class="btn btn-secondary"
           href="@($"/students/edit?studentid={student.StudentId}")">Edit</a>
        <a class="btn btn-link" href="/students">Back to List</a>
    </div>
}

@code {
    private Student? student;
    private string statusMessage = "";

    [SupplyParameterFromQuery]
    private int StudentId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        student = await context.Student
                               .Include(s => s.Wand)
                               .Include(s => s.House)
                               .FirstOrDefaultAsync(s => s.StudentId == StudentId);

        if (student is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
    private async Task PerformMaintenance()
    {
        statusMessage = "⏳ Bakım işleniyor…";

        using var context = DbFactory.CreateDbContext();
        var wand = await context.Wand
                                .SingleOrDefaultAsync(w => w.WandId == student!.Wand.WandId);

        if (wand is null)
        {
            statusMessage = "⚠️ Asa bulunamadı!";
            return;
        }

        wand.LastMaintenanceDate = DateTime.Now;
        await context.SaveChangesAsync();

        student.Wand.LastMaintenanceDate = wand.LastMaintenanceDate;
        statusMessage = "✅ Son bakım tarihi güncellendi.";
    }

}
