@page "/students/delete"
@using Microsoft.EntityFrameworkCore
@using dnzHogwards
@inject IDbContextFactory<HogwartsWeb.Data.HogwartsWebContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete Student</PageTitle>

<div class="page-container">
    <h1 class="page-title">Delete Student</h1>

    <p>Are you sure you want to delete this student?</p>
    <hr />

    @if (student is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-3">First Name</dt>
            <dd class="col-sm-9">@student.FirstName</dd>

            <dt class="col-sm-3">Last Name</dt>
            <dd class="col-sm-9">@student.LastName</dd>

            <dt class="col-sm-3">Level</dt>
            <dd class="col-sm-9">@student.Level</dd>

            <dt class="col-sm-3">House</dt>
            <dd class="col-sm-9">@student.House?.HouseName</dd>

            <dt class="col-sm-3">Wand ID</dt>
            <dd class="col-sm-9">@student.WandId</dd>
        </dl>

        <EditForm method="post" Model="student" OnValidSubmit="DeleteStudent" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger me-2" disabled="@(student is null)">Delete</button>
            <a href="/students" class="btn btn-secondary">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Student? student;

    [SupplyParameterFromQuery]
    private int StudentId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        student = await context.Student
                               .Include(m => m.House)
                               .FirstOrDefaultAsync(m => m.StudentId == StudentId);

        if (student is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteStudent()
    {
        using var context = DbFactory.CreateDbContext();
        context.Student.Remove(student!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/students");
    }
}
