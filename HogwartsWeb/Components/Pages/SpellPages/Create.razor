@page "/spells/create"
@using Microsoft.EntityFrameworkCore
@using AbdHogwarts
@inject IDbContextFactory<HogwartsWeb.Data.HogwartsWebContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create Spell</PageTitle>

<div class="page-container">
    <h1 class="page-title">Create Spell</h1>

    <EditForm method="post" Model="Spell" OnValidSubmit="AddSpell" FormName="create" Enhance>
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" role="alert" />

        <div class="mb-3">
            <label for="spellname" class="form-label">Spell Name:</label>
            <InputText id="spellname" @bind-Value="Spell.SpellName" class="form-control" />
            <ValidationMessage For="() => Spell.SpellName" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="effect" class="form-label">Effect:</label>
            <InputText id="effect" @bind-Value="Spell.Effect" class="form-control" />
            <ValidationMessage For="() => Spell.Effect" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="requiredlevel" class="form-label">Required Level:</label>
            <InputNumber id="requiredlevel" @bind-Value="Spell.RequiredLevel" class="form-control" />
            <ValidationMessage For="() => Spell.RequiredLevel" class="text-danger" />
        </div>

        <button type="submit" class="btn-create">Create</button>
        <a href="/spells" class="btn btn-secondary ms-2">Back to List</a>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    private Spell Spell { get; set; } = new();

    private async Task AddSpell()
    {
        using var context = DbFactory.CreateDbContext();
        context.Spell.Add(Spell);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/spells");
    }
}
